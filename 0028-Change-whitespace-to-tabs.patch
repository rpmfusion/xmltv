From 09a29faf43b2a93c06642f80738457b6b3d87fd8 Mon Sep 17 00:00:00 2001
From: Honir <honir@c4b.co.uk>
Date: Mon, 28 Dec 2020 08:47:49 +0000
Subject: [PATCH 28/50] Change whitespace to tabs

---
 filter/tv_imdb | 340 ++++++++++++++++++++++++-------------------------
 1 file changed, 170 insertions(+), 170 deletions(-)

diff --git a/filter/tv_imdb b/filter/tv_imdb
index 4e8652ce..83570b4b 100755
--- a/filter/tv_imdb
+++ b/filter/tv_imdb
@@ -193,168 +193,168 @@ END
 use XMLTV::IMDB;
 
 my ($opt_help,
-    $opt_output,
-    $opt_prepStage,
-    $opt_imdbDir,
-    $opt_quiet,
-    $opt_download,
-    $opt_stats,
-    $opt_debug,
-    $opt_movies_only,
-    $opt_with_keywords,
-    $opt_with_plot,
-    $opt_num_actors,
-    $opt_validate_title,
-    $opt_validate_year,
+	$opt_output,
+	$opt_prepStage,
+	$opt_imdbDir,
+	$opt_quiet,
+	$opt_download,
+	$opt_stats,
+	$opt_debug,
+	$opt_movies_only,
+	$opt_with_keywords,
+	$opt_with_plot,
+	$opt_num_actors,
+	$opt_validate_title,
+	$opt_validate_year,
    );
 
-GetOptions('help' => \$opt_help,
-	   'output=s' => \$opt_output,
-	   'prepStage=s' => \$opt_prepStage,
-	   'imdbdir=s' => \$opt_imdbDir,
-	   'with-keywords' => \$opt_with_keywords,
-	   'with-plot'     => \$opt_with_plot,
-	   'movies-only' => \$opt_movies_only,
-	   'actors=s'      => \$opt_num_actors,
-	   'quiet' => \$opt_quiet,
-	   'download' => \$opt_download,
-	   'stats'         => \$opt_stats,
-	   'debug+'         => \$opt_debug,
-	   'validate-title=s' => \$opt_validate_title,
-	   'validate-year=s'  => \$opt_validate_year,
-	   ) or usage(0);
+GetOptions('help' 			=> \$opt_help,
+		'output=s'			=> \$opt_output,
+		'prepStage=s' 		=> \$opt_prepStage,
+		'imdbdir=s' 		=> \$opt_imdbDir,
+		'with-keywords' 	=> \$opt_with_keywords,
+		'with-plot'	 		=> \$opt_with_plot,
+		'movies-only' 		=> \$opt_movies_only,
+		'actors=s'	  		=> \$opt_num_actors,
+		'quiet' 			=> \$opt_quiet,
+		'download' 			=> \$opt_download,
+		'stats'		 		=> \$opt_stats,
+		'debug+'			=> \$opt_debug,
+		'validate-title=s'	=> \$opt_validate_title,
+		'validate-year=s'	=> \$opt_validate_year,
+		) or usage(0);
 
 usage(1) if $opt_help;
 usage(1) if ( not defined($opt_imdbDir) );
 
-$opt_with_keywords=0 if ( !defined($opt_with_keywords) );
-$opt_with_plot=0     if ( !defined($opt_with_plot) );
-$opt_num_actors=3    if ( !defined($opt_num_actors) );
-$opt_movies_only=0 if ( !defined($opt_movies_only) );
-$opt_debug=0         if ( !defined($opt_debug) );
+$opt_with_keywords=0 	if ( !defined($opt_with_keywords) );
+$opt_with_plot=0	 	if ( !defined($opt_with_plot) );
+$opt_num_actors=3		if ( !defined($opt_num_actors) );
+$opt_movies_only=0 		if ( !defined($opt_movies_only) );
+$opt_debug=0		 	if ( !defined($opt_debug) );
 
 $opt_quiet=(defined($opt_quiet));
 if ( !defined($opt_stats) ) {
-    $opt_stats=!$opt_quiet;
+	$opt_stats=!$opt_quiet;
 }
 else {
-    $opt_stats=(defined($opt_stats));
+	$opt_stats=(defined($opt_stats));
 }
 $opt_debug=0  if $opt_quiet;
 
 if ( defined($opt_prepStage) ) {
-    print STDERR <<END
+	print STDERR <<END
 Building indices.  Be warned, this needs a lot of memory for the final stage
 (working set about 250 megabytes).
 
 END
-    if ( ! $opt_quiet ) ;
-
-    my %options =
-      ('imdbDir' => $opt_imdbDir,
-       'verbose' => !$opt_quiet,
-       'showProgressBar' => !$opt_quiet,
-       'stageToRun' => $opt_prepStage,
-       'downloadMissingFiles' => $opt_download,
-      );
-
-    if ( $opt_prepStage eq "all" ) {
-	for (my $stage=1 ; $stage <= 9 ; $stage++ ) {
-	    my $n=new XMLTV::IMDB::Crunch(%options);
-	    if ( !$n ) {
-		exit(1);
-	    }
-	    my $ret=$n->crunchStage($stage);
-	    if ( $ret != 0 ) {
+	if ( ! $opt_quiet ) ;
+
+	my %options =
+		('imdbDir' => $opt_imdbDir,
+		 'verbose' => !$opt_quiet,
+		 'showProgressBar' => !$opt_quiet,
+		 'stageToRun' => $opt_prepStage,
+		 'downloadMissingFiles' => $opt_download,
+		);
+
+	if ( $opt_prepStage eq "all" ) {
+		for (my $stage=1 ; $stage <= 9 ; $stage++ ) {
+			my $n=new XMLTV::IMDB::Crunch(%options);
+			if ( !$n ) {
+				exit(1);
+			}
+			my $ret=$n->crunchStage($stage);
+			if ( $ret != 0 ) {
+				exit($ret);
+			}
+		}
+		print STDERR "database load complete, let the games begin !\n" if ( !$opt_quiet);
+		exit(0);
+	}
+	else {
+		my $n=new XMLTV::IMDB::Crunch(%options);
+		if ( !$n ) {
+			exit(1);
+		}
+		my $ret=$n->crunchStage(int($opt_prepStage));
+		if ( $ret == 0 && int($opt_prepStage) == 9 ) {
+			print STDERR "database load complete, let the games begin !\n" if ( !$opt_quiet);
+		}
 		exit($ret);
-	    }
 	}
-	print STDERR "database load complete, let the games begin !\n" if ( !$opt_quiet);
-	exit(0);
-    }
-    else {
+}
+elsif ( $opt_download ) {
+	my %options =
+		('imdbDir' 				=> $opt_imdbDir,
+		 'verbose'				=> !$opt_quiet,
+		 'showProgressBar' 		=> !$opt_quiet,
+		 'stageToRun'			=> 'all',
+		 'downloadMissingFiles' => $opt_download,
+		);
+
 	my $n=new XMLTV::IMDB::Crunch(%options);
 	if ( !$n ) {
-	    exit(1);
-	}
-	my $ret=$n->crunchStage(int($opt_prepStage));
-	if ( $ret == 0 && int($opt_prepStage) == 9 ) {
-	    print STDERR "database load complete, let the games begin !\n" if ( !$opt_quiet);
+		exit(1);
 	}
-	exit($ret);
-    }
-}
-elsif ( $opt_download ) {
-    my %options =
-    ('imdbDir' => $opt_imdbDir,
-     'verbose' => !$opt_quiet,
-     'showProgressBar' => !$opt_quiet,
-     'stageToRun' => 'all',
-     'downloadMissingFiles' => $opt_download,
-    );
-
-    my $n=new XMLTV::IMDB::Crunch(%options);
-    if ( !$n ) {
-	exit(1);
-    }
-    exit(0);
+	exit(0);
 }
 
-my $imdb=new XMLTV::IMDB('imdbDir' => $opt_imdbDir,
-			 'verbose'         => $opt_debug,
-			 'cacheLookups' => 1,
-			 'cacheLookupSize' => 1000,
-			 'updateKeywords'  => $opt_with_keywords,
-			 'updatePlot'      => $opt_with_plot,
-			 'numActors'       => $opt_num_actors,
-			 );
+my $imdb=new XMLTV::IMDB('imdbDir' 			=> $opt_imdbDir,
+						 'verbose'		 	=> $opt_debug,
+						 'cacheLookups' 	=> 1,
+						 'cacheLookupSize' 	=> 1000,
+						 'updateKeywords'  	=> $opt_with_keywords,
+						 'updatePlot'	  	=> $opt_with_plot,
+						 'numActors'	  	=> $opt_num_actors,
+						 );
 
 #$imdb->{verbose}++;
 
 if ( my $errline=$imdb->sanityCheckDatabase() ) {
-    print STDERR "$errline";
-    print STDERR "tv_imdb: you need to use --prepStage to rebuild\n";
-    exit(1);
+	print STDERR "$errline";
+	print STDERR "tv_imdb: you need to use --prepStage to rebuild\n";
+	exit(1);
 }
 
 if ( !$imdb->openMovieIndex() ) {
-    print STDERR "tv_imdb: open database failed\n";
-    exit(1);
+	print STDERR "tv_imdb: open database failed\n";
+	exit(1);
 }
 
 if ( defined($opt_validate_title) != defined($opt_validate_year) ) {
-    print STDERR "tv_imdb: both --validate-title and --validate-year must be used together\n";
-    exit(1);
+	print STDERR "tv_imdb: both --validate-title and --validate-year must be used together\n";
+	exit(1);
 }
 
 if ( defined($opt_validate_title) && defined($opt_validate_year)  ) {
-    my $prog;
-
-    $prog->{title}->[0]->[0]=$opt_validate_title;
-    $prog->{date}=$opt_validate_year;
-    $imdb->{updateTitles}=0;
-
-    #print Dumper($prog);
-    my $n=$imdb->augmentProgram($prog, $opt_movies_only);
-    if ( $n ) {
-	$Data::Dumper::Sortkeys = 1; # ensure consistent order of dumped hash
-	#my $encoding;
-	#my $w = new XMLTV::Writer((), encoding => $encoding);
-	#$w->start(shift);
-	#$w->write_programme($n);
-	print Dumper($n);
-	#$w->end();
-    }
-    $imdb->closeMovieIndex();
-    exit(0);
+	my $prog;
+
+	$prog->{title}->[0]->[0]=$opt_validate_title;
+	$prog->{date}=$opt_validate_year;
+	$imdb->{updateTitles}=0;
+
+	#print Dumper($prog);
+	my $n=$imdb->augmentProgram($prog, $opt_movies_only);
+	if ( $n ) {
+		$Data::Dumper::Sortkeys = 1; # ensure consistent order of dumped hash
+		#my $encoding;
+		#my $w = new XMLTV::Writer((), encoding => $encoding);
+		#$w->start(shift);
+		#$w->write_programme($n);
+		print Dumper($n);
+		#$w->end();
+	}
+	$imdb->closeMovieIndex();
+	exit(0);
 }
 
 # test that movie database works okay
 my %w_args = ();
 if (defined $opt_output) {
-    my $fh = new IO::File ">$opt_output";
-    die "cannot write to $opt_output\n" if not $fh;
-    %w_args = (OUTPUT => $fh);
+	my $fh = new IO::File ">$opt_output";
+	die "cannot write to $opt_output\n" if not $fh;
+	%w_args = (OUTPUT => $fh);
 }
 
 my $numberOfSeenChannels=0;
@@ -363,78 +363,78 @@ my $w;
 my $encoding;   # store encoding of input file
 
 sub encoding_cb( $ ) {
-    die if defined $w;
-    $encoding = shift;    # callback returns the file's encoding
-    $w = new XMLTV::Writer(%w_args, encoding => $encoding);
+	die if defined $w;
+	$encoding = shift;	# callback returns the file's encoding
+	$w = new XMLTV::Writer(%w_args, encoding => $encoding);
 }
 
 sub credits_cb( $ ) {
-    $w->start(shift);
+	$w->start(shift);
 }
 
 my %seen_ch;
 sub channel_cb( $ ) {
-    my $c = shift;
-    my $id = $c->{id};
-    $Data::Dumper::Sortkeys = 1; # ensure consistent order of dumped hash
-    if (not defined $seen_ch{$id}) {
-	$w->write_channel($c);
-	$seen_ch{$id} = $c;
-	$numberOfSeenChannels++;
-    }
-    elsif (Dumper($seen_ch{$id}) eq Dumper($c)) {
-	# They're identical, okay.
-    }
-    else {
-	warn "channel $id may differ between two files, "
-	  . "picking one arbitrarily\n";
-    }
+	my $c = shift;
+	my $id = $c->{id};
+	$Data::Dumper::Sortkeys = 1; # ensure consistent order of dumped hash
+	if (not defined $seen_ch{$id}) {
+		$w->write_channel($c);
+		$seen_ch{$id} = $c;
+		$numberOfSeenChannels++;
+	}
+	elsif (Dumper($seen_ch{$id}) eq Dumper($c)) {
+		# They're identical, okay.
+	}
+	else {
+		warn "channel $id may differ between two files, "
+		  . "picking one arbitrarily\n";
+	}
 }
 
 sub programme_cb( $ ) {
-    my $prog=shift;
-
-    # The database made by IMDB.pm is read as iso-8859-1. The xml file may be different (e.g. utf-8).
-    # IMDB::augmentProgram does not re-encode the data it adds, so the output file has invalid characters (bug #440).
-
-    my $orig_prog = $prog;
-    if (lc($encoding) ne 'iso-8859-1') {
-      # decode the incoming programme
-      $prog = XMLTV::Data::Recursive::Encode->decode($encoding, $prog);
-    }
-
-    # augmentProgram will now add imdb data as iso-8859-1
-    my $nprog=$imdb->augmentProgram($prog, $opt_movies_only);
-    if ( $nprog ) {
-      if (lc($encoding) ne 'iso-8859-1') {
-        # re-code the modified programme back to original encoding
-        $nprog = XMLTV::Data::Recursive::Encode->encode($encoding, $nprog);
-      }
+	my $prog=shift;
+
+	# The database made by IMDB.pm is read as iso-8859-1. The xml file may be different (e.g. utf-8).
+	# IMDB::augmentProgram does not re-encode the data it adds, so the output file has invalid characters (bug #440).
+
+	my $orig_prog = $prog;
+	if (lc($encoding) ne 'iso-8859-1') {
+		# decode the incoming programme
+		$prog = XMLTV::Data::Recursive::Encode->decode($encoding, $prog);
+	}
+
+	# augmentProgram will now add imdb data as iso-8859-1
+	my $nprog=$imdb->augmentProgram($prog, $opt_movies_only);
+	if ( $nprog ) {
+		if (lc($encoding) ne 'iso-8859-1') {
+			# re-code the modified programme back to original encoding
+			$nprog = XMLTV::Data::Recursive::Encode->encode($encoding, $nprog);
+		}
 	$prog=$nprog;
-    }
-    else {
-        $prog = $orig_prog;
-    }
-
-    # we only add movie information to programmes
-    # that have a 'date' element defined (since we need
-    # a year to work with when verifing we got the correct
-    # hit in the imdb data)
-    $w->write_programme($prog);
+	}
+	else {
+		$prog = $orig_prog;
+	}
+
+	# we only add movie information to programmes
+	# that have a 'date' element defined (since we need
+	# a year to work with when verifing we got the correct
+	# hit in the imdb data)
+	$w->write_programme($prog);
 }
 
 @ARGV = ('-') if not @ARGV;
 
-XMLTV::parsefiles_callback(\&encoding_cb, \&credits_cb,
-			   \&channel_cb, \&programme_cb,
-			   @ARGV);
+XMLTV::parsefiles_callback( \&encoding_cb, \&credits_cb,
+							\&channel_cb, \&programme_cb,
+							@ARGV );
 # we only get a Writer if the encoding callback gets called
 if ( $w ) {
-    $w->end();
+	$w->end();
 }
 
 if ( $opt_stats ) {
-    print STDERR $imdb->getStatsLines($numberOfSeenChannels);
+	print STDERR $imdb->getStatsLines($numberOfSeenChannels);
 }
 $imdb->closeMovieIndex();
 exit(0);
-- 
2.29.2

